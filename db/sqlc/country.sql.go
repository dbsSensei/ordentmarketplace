// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: country.sql

package db

import (
	"context"
)

const countCountry = `-- name: CountCountry :one
SELECT COUNT(*)
FROM countries
`

func (q *Queries) CountCountry(ctx context.Context) (int64, error) {
	row := q.db.QueryRowContext(ctx, countCountry)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const createCountry = `-- name: CreateCountry :one
INSERT INTO countries (code, name)
VALUES ($1, $2) RETURNING code, name
`

type CreateCountryParams struct {
	Code string `json:"code"`
	Name string `json:"name"`
}

func (q *Queries) CreateCountry(ctx context.Context, arg CreateCountryParams) (Country, error) {
	row := q.db.QueryRowContext(ctx, createCountry, arg.Code, arg.Name)
	var i Country
	err := row.Scan(&i.Code, &i.Name)
	return i, err
}

const getCountry = `-- name: GetCountry :one
SELECT code, name
FROM countries
WHERE code = $1 LIMIT 1
`

func (q *Queries) GetCountry(ctx context.Context, code string) (Country, error) {
	row := q.db.QueryRowContext(ctx, getCountry, code)
	var i Country
	err := row.Scan(&i.Code, &i.Name)
	return i, err
}
